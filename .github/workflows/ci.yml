name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Descargar el código
      - name: Checkout Code
        uses: actions/checkout@v3

      # Paso 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Paso 3: Instalar dependencias
      - name: Install Dependencies
        run: |
          pip install -r app/requirements.txt

      # Paso 4: Depurar la respuesta HTML (opcional para ver contenido)
      - name: Debug Flask Response
        run: |
          python -c "from app import app; response = app.test_client().get('/'); print(response.data.decode('utf-8'))"

      # Paso 5: Guardar el contenido HTML si es necesario
      - name: Save HTML Response
        run: |
          python -c "from app import app; response = app.test_client().get('/'); open('response.html', 'w').write(response.data.decode('utf-8'))"

      # Paso 6: Subir HTML Response para inspección manual
      - name: Upload HTML Response
        uses: actions/upload-artifact@v3
        with:
          name: html-response
          path: response.html

      # Paso 7: Ejecutar pruebas unitarias
      - name: Run Tests
        run: |
          python -m unittest discover -s app/tests
